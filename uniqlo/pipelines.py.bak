# -*- coding: utf-8 -*-

# Define your item pipelines here
#
# Don't forget to add your pipeline to the ITEM_PIPELINES setting
# See: http://doc.scrapy.org/en/latest/topics/item-pipeline.html

from scrapy import log
from scrapy.exceptions import DropItem
from twisted.enterprise import adbapi


class UniqloPipeline(object):
    def process_item(self, item, spider):
        return item
class MySQLStorePipeLine(object):
    """
    A pipeline to store the item in a MySQL database
    """
    @classmethod
    def from_settings(cls, settings):
        dbargs = dict(
            host=settings['MYSQL_HOST'],
            db=settings['MYSQL_DBNAME'],
            user=settings['MYSQL_USER'],
            passwd=settings['MYSQL_PASSWD'],
            charset='utf8',
            use_unicode=True,
        )
        dbpool = adbapi.ConnectionPool('MySQLdb', **dbargs)
        return cls(dbpool)

    def process_item(self, item, spider):
        # run db query in the thread pool
        d = self.dbpool.runInteraction(self._do_upsert, item, spider)
        d.addErrback(self._handle_error, item, spider)
        d.addBoth(lambda _: item)
        return d
    def _do_upsert(self, conn, item, spider):
        """Perform an insert or update """
        guid = self._get_guid(item)
        now = datetime.utcnow().replace(microsecod=0).isformat(' ')

        conn.exect("""SELECT """)
        

